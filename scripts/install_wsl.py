#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üîß –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL –¥–ª—è Docker

–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º README.md:
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
- –ü–æ—à–∞–≥–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ Docker

–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: scripts/install_wsl.py
"""

import os
import sys
import subprocess
import time
import ctypes
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))


class WSLInstaller:
    """
    üîß –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL
    
    –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ:
    - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    - –ü–æ—à–∞–≥–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è
    """
    
    def __init__(self):
        self.is_admin = self.check_admin_rights()
        self.execution_log = []
        
    def log_action(self, action: str, success: bool = True):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º"""
        status = "‚úÖ" if success else "‚ùå"
        message = f"{status} {action}"
        print(message)
        self.execution_log.append((action, success))
    
    def check_admin_rights(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        try:
            return ctypes.windll.shell32.IsUserAnAdmin()
        except:
            return False
    
    def check_windows_version(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ Windows"""
        try:
            print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Windows...")
            
            result = subprocess.run(
                ["ver"],
                shell=True,
                capture_output=True,
                text=True
            )
            
            version_info = result.stdout.strip()
            print(f"üìã {version_info}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É WSL 2
            version_result = subprocess.run(
                ["powershell", "-Command", "[System.Environment]::OSVersion.Version"],
                capture_output=True,
                text=True
            )
            
            if version_result.returncode == 0:
                print("‚úÖ Windows —Å–æ–≤–º–µ—Å—Ç–∏–º —Å WSL 2")
                self.log_action("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Windows", True)
                return True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é Windows")
                self.log_action("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Windows", False)
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Windows: {e}")
            self.log_action("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Windows", False)
            return False
    
    def enable_windows_features(self) -> bool:
        """–í–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Windows"""
        try:
            print("üîß –í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Windows...")
            
            if not self.is_admin:
                print("‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
                print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
                print("   1. Win + X")
                print("   2. Windows PowerShell (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)")
                print("   3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∏–∂–µ:")
                print()
                print("dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart")
                print("dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart")
                return False
            
            # –í–∫–ª—é—á–∞–µ–º WSL
            print("‚öôÔ∏è –í–∫–ª—é—á–µ–Ω–∏–µ Windows Subsystem for Linux...")
            result1 = subprocess.run([
                "dism.exe", "/online", "/enable-feature",
                "/featurename:Microsoft-Windows-Subsystem-Linux",
                "/all", "/norestart"
            ], capture_output=True, text=True)
            
            if result1.returncode == 0 or "—É–∂–µ –≤–∫–ª—é—á–µ–Ω" in result1.stdout:
                print("‚úÖ WSL –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤–∫–ª—é—á–µ–Ω")
            else:
                print(f"‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å WSL: {result1.stderr}")
            
            # –í–∫–ª—é—á–∞–µ–º Virtual Machine Platform
            print("‚öôÔ∏è –í–∫–ª—é—á–µ–Ω–∏–µ Virtual Machine Platform...")
            result2 = subprocess.run([
                "dism.exe", "/online", "/enable-feature",
                "/featurename:VirtualMachinePlatform",
                "/all", "/norestart"
            ], capture_output=True, text=True)
            
            if result2.returncode == 0 or "—É–∂–µ –≤–∫–ª—é—á–µ–Ω" in result2.stdout:
                print("‚úÖ Virtual Machine Platform –≤–∫–ª—é—á–µ–Ω")
            else:
                print(f"‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å VMP: {result2.stderr}")
            
            self.log_action("–í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Windows", True)
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
            self.log_action("–í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Windows", False)
            return False
    
    def install_wsl_kernel(self) -> bool:
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL"""
        try:
            print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL...")
            
            if not self.is_admin:
                print("‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
                print("üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: wsl --install")
                return False
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º WSL
            result = subprocess.run([
                "wsl", "--install", "--distribution", "Ubuntu"
            ], capture_output=True, text=True, timeout=300)
            
            if result.returncode == 0:
                print("‚úÖ WSL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                print("üìã –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Ubuntu –∫–∞–∫ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
                self.log_action("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL", True)
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WSL: {result.stderr}")
                self.log_action("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL", False)
                return False
                
        except subprocess.TimeoutExpired:
            print("‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏")
            print("üí° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è –≤ —Ñ–æ–Ω–µ")
            self.log_action("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL", True)
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WSL: {e}")
            self.log_action("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL", False)
            return False
    
    def set_wsl_version(self) -> bool:
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL 2 –∫–∞–∫ –≤–µ—Ä—Å–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        try:
            print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WSL 2 –∫–∞–∫ –≤–µ—Ä—Å–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...")
            
            result = subprocess.run([
                "wsl", "--set-default-version", "2"
            ], capture_output=True, text=True)
            
            if result.returncode == 0:
                print("‚úÖ WSL 2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –≤–µ—Ä—Å–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
                self.log_action("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ WSL 2", True)
                return True
            else:
                print(f"‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {result.stderr}")
                self.log_action("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ WSL 2", False)
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WSL 2: {e}")
            self.log_action("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ WSL 2", False)
            return False
    
    def verify_installation(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
        try:
            print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WSL...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é WSL
            version_result = subprocess.run([
                "wsl", "--version"
            ], capture_output=True, text=True)
            
            if version_result.returncode == 0:
                print("‚úÖ WSL —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                print(f"üìã {version_result.stdout.strip()}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤
                list_result = subprocess.run([
                    "wsl", "--list", "--verbose"
                ], capture_output=True, text=True)
                
                if list_result.returncode == 0:
                    print("üìã –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã:")
                    print(list_result.stdout)
                
                self.log_action("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WSL", True)
                return True
            else:
                print(f"‚ùå WSL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {version_result.stderr}")
                self.log_action("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WSL", False)
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ WSL: {e}")
            self.log_action("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WSL", False)
            return False
    
    def provide_next_steps(self):
        """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤"""
        print("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò –ü–û–°–õ–ï –£–°–¢–ê–ù–û–í–ö–ò WSL:")
        print("=" * 60)
        
        print("\nüìã –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:")
        print("1. üîÑ –ü–ï–†–ï–ó–ê–ì–†–£–ó–ò–¢–ï –ö–û–ú–ü–¨–Æ–¢–ï–†")
        print("   - WSL —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
        print("   - –ù–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Windows –¥–æ–ª–∂–Ω—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è")
        
        print("\n2. üêß –ù–ê–°–¢–†–û–ô–ö–ê UBUNTU (–ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ):")
        print("   - –û—Ç–∫—Ä–æ–π—Ç–µ 'Ubuntu' –∏–∑ –º–µ–Ω—é –ü—É—Å–∫")
        print("   - –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å Unix")
        print("   - –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        print("\n3. üê≥ –ó–ê–ü–£–°–ö DOCKER DESKTOP:")
        print("   - –ù–∞–π–¥–∏—Ç–µ 'Docker Desktop' –≤ –º–µ–Ω—é –ü—É—Å–∫")
        print("   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop")
        print("   - –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–µ–ª–µ–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞")
        
        print("\n4. üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:")
        print("   - python scripts/setup_docker.py")
        print("   - docker compose up -d")
        
        print("\nüîß –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –ö–û–ú–ê–ù–î–´ (–µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç):")
        print("   wsl --update                    # –û–±–Ω–æ–≤–∏—Ç—å WSL")
        print("   wsl --shutdown                  # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å WSL")
        print("   wsl --list --verbose           # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã")
    
    def run_installation(self) -> bool:
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WSL"""
        print("üîß –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê WSL")
        print("–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("=" * 65)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not self.is_admin:
            print("‚ùå –¢–†–ï–ë–£–Æ–¢–°–Ø –ü–†–ê–í–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
            print("\nüí° –ó–ê–ü–£–°–¢–ò–¢–ï –°–ö–†–ò–ü–¢ –û–¢ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê:")
            print("1. –ù–∞–∂–º–∏—Ç–µ Win + X")
            print("2. –í—ã–±–µ—Ä–∏—Ç–µ 'Windows PowerShell (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)'")
            print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É: cd C:\\avito")
            print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/install_wsl.py")
            
            print("\nüîÑ –†–£–ß–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê:")
            print("1. –í PowerShell –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
            print("   wsl --install")
            print("2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä")
            print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Ubuntu –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ")
            return False
        
        steps = [
            ("–ü—Ä–æ–≤–µ—Ä–∫–∞ Windows", self.check_windows_version),
            ("–í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤", self.enable_windows_features),
            ("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WSL", self.install_wsl_kernel),
            ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ WSL 2", self.set_wsl_version),
            ("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏", self.verify_installation),
        ]
        
        success_count = 0
        for step_name, step_func in steps:
            print(f"\nüîÑ {step_name}...")
            try:
                if step_func():
                    success_count += 1
                else:
                    print(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –≤ —à–∞–≥–µ: {step_name}")
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —à–∞–≥–µ '{step_name}': {e}")
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –£–°–¢–ê–ù–û–í–ö–ò:")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —à–∞–≥–æ–≤: {success_count}/{len(steps)}")
        
        if success_count >= 3:  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            print("üéâ WSL –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
            self.provide_next_steps()
            return True
        else:
            print("‚ö†Ô∏è –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –ü–†–û–ë–õ–ï–ú–ê–ú–ò")
            print("üìù –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–≥–∏ —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
            self.provide_next_steps()
            return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        installer = WSLInstaller()
        success = installer.run_installation()
        
        if success:
            print("\n‚úÖ WSL –≥–æ—Ç–æ–≤ –¥–ª—è Docker!")
        else:
            print("\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
            
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()