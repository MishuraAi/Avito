"""
üè† –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π –ê–≤–∏—Ç–æ

–≠—Ç–æ—Ç –ø–∞–∫–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ê–≤–∏—Ç–æ:
- api_client.py      - API –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º API
- selenium_client.py - Selenium –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–∞–∫ fallback —Ä–µ—à–µ–Ω–∏–µ  
- webhook_handler.py - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–æ–≤ –æ—Ç –ê–≤–∏—Ç–æ
- models.py         - –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ê–≤–∏—Ç–æ API
- exceptions.py     - –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è

–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: src/integrations/avito/__init__.py
"""

from typing import Optional, Dict, List, Any
from dataclasses import dataclass
from datetime import datetime
from enum import Enum

# –ë—É–¥—É—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ –º–µ—Ä–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
try:
    from .api_client import AvitoAPIClient
    API_CLIENT_AVAILABLE = True
except ImportError:
    API_CLIENT_AVAILABLE = False

try:
    from .selenium_client import AvitoSeleniumClient
    SELENIUM_CLIENT_AVAILABLE = True
except ImportError:
    SELENIUM_CLIENT_AVAILABLE = False

try:
    from .webhook_handler import AvitoWebhookHandler
    WEBHOOK_HANDLER_AVAILABLE = True
except ImportError:
    WEBHOOK_HANDLER_AVAILABLE = False


class AvitoMessageStatus(str, Enum):
    """–°—Ç–∞—Ç—É—Å—ã —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ê–≤–∏—Ç–æ"""
    
    UNREAD = "unread"           # –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
    READ = "read"               # –ü—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
    REPLIED = "replied"         # –û—Ç–≤–µ—á–µ–Ω–æ
    ARCHIVED = "archived"       # –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ


class AvitoAdStatus(str, Enum):
    """–°—Ç–∞—Ç—É—Å—ã –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –ê–≤–∏—Ç–æ"""
    
    ACTIVE = "active"           # –ê–∫—Ç–∏–≤–Ω–æ
    PAUSED = "paused"          # –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    BLOCKED = "blocked"        # –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
    EXPIRED = "expired"        # –ò—Å—Ç–µ–∫–ª–æ
    REMOVED = "removed"        # –£–¥–∞–ª–µ–Ω–æ


@dataclass
class AvitoMessage:
    """–ú–æ–¥–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ê–≤–∏—Ç–æ"""
    
    message_id: str
    chat_id: str
    ad_id: str
    user_id: str
    text: str
    created_at: datetime
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    status: AvitoMessageStatus = AvitoMessageStatus.UNREAD
    is_from_seller: bool = False
    attachments: List[str] = None
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    raw_data: Optional[Dict[str, Any]] = None
    
    def __post_init__(self):
        if self.attachments is None:
            self.attachments = []


@dataclass
class AvitoAd:
    """–ú–æ–¥–µ–ª—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ –ê–≤–∏—Ç–æ"""
    
    ad_id: str
    title: str
    price: Optional[int]
    description: str
    category: str
    
    # –°—Ç–∞—Ç—É—Å –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    status: AvitoAdStatus
    created_at: datetime
    updated_at: datetime
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    images: List[str] = None
    location: Optional[str] = None
    views_count: int = 0
    contacts_count: int = 0
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    raw_data: Optional[Dict[str, Any]] = None
    
    def __post_init__(self):
        if self.images is None:
            self.images = []


@dataclass
class AvitoChat:
    """–ú–æ–¥–µ–ª—å —á–∞—Ç–∞ —Å –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º"""
    
    chat_id: str
    ad_id: str
    user_id: str
    user_name: Optional[str]
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞
    messages_count: int = 0
    last_message_at: Optional[datetime] = None
    unread_count: int = 0
    
    # –°—Ç–∞—Ç—É—Å
    is_blocked: bool = False
    is_archived: bool = False
    
    def get_display_name(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        return self.user_name or f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.user_id[:8]}"


class AvitoIntegrationConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ê–≤–∏—Ç–æ"""
    
    def __init__(
        self,
        client_id: str,
        client_secret: str,
        api_base_url: str = "https://api.avito.ru",
        use_selenium_fallback: bool = True,
        selenium_headless: bool = True,
        request_timeout: int = 30,
        rate_limit_requests: int = 100,
        rate_limit_window: int = 3600
    ):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        
        Args:
            client_id: ID –∫–ª–∏–µ–Ω—Ç–∞ –ê–≤–∏—Ç–æ API
            client_secret: –°–µ–∫—Ä–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –ê–≤–∏—Ç–æ API
            api_base_url: –ë–∞–∑–æ–≤—ã–π URL API
            use_selenium_fallback: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Selenium –∫–∞–∫ fallback
            selenium_headless: –ó–∞–ø—É—Å–∫–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä –≤ headless —Ä–µ–∂–∏–º–µ
            request_timeout: –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            rate_limit_requests: –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
            rate_limit_window: –û–∫–Ω–æ –ª–∏–º–∏—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        """
        
        self.client_id = client_id
        self.client_secret = client_secret
        self.api_base_url = api_base_url
        self.use_selenium_fallback = use_selenium_fallback
        self.selenium_headless = selenium_headless
        self.request_timeout = request_timeout
        self.rate_limit_requests = rate_limit_requests
        self.rate_limit_window = rate_limit_window
    
    def validate(self) -> bool:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        
        if not self.client_id or not self.client_secret:
            return False
        
        if self.request_timeout <= 0:
            return False
        
        if self.rate_limit_requests <= 0 or self.rate_limit_window <= 0:
            return False
        
        return True


class AvitoException(Exception):
    """–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –ê–≤–∏—Ç–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    
    def __init__(self, message: str, error_code: Optional[str] = None):
        super().__init__(message)
        self.error_code = error_code


class AvitoAPIException(AvitoException):
    """–ò—Å–∫–ª—é—á–µ–Ω–∏–µ API –ê–≤–∏—Ç–æ"""
    
    def __init__(self, message: str, status_code: int, error_code: Optional[str] = None):
        super().__init__(message, error_code)
        self.status_code = status_code


class AvitoSeleniumException(AvitoException):
    """–ò—Å–∫–ª—é—á–µ–Ω–∏–µ Selenium –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"""
    pass


class AvitoRateLimitException(AvitoException):
    """–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    
    def __init__(self, message: str, retry_after: int):
        super().__init__(message)
        self.retry_after = retry_after


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
AVAILABLE_COMPONENTS = {
    "api_client": API_CLIENT_AVAILABLE,
    "selenium_client": SELENIUM_CLIENT_AVAILABLE,
    "webhook_handler": WEBHOOK_HANDLER_AVAILABLE
}

# –í–µ—Ä—Å–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
__version__ = "0.1.0"

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
__all__ = [
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    "AvitoIntegrationConfig",
    
    # –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
    "AvitoMessage",
    "AvitoAd", 
    "AvitoChat",
    
    # –ï–Ω—É–º—ã
    "AvitoMessageStatus",
    "AvitoAdStatus",
    
    # –ò—Å–∫–ª—é—á–µ–Ω–∏—è
    "AvitoException",
    "AvitoAPIException",
    "AvitoSeleniumException", 
    "AvitoRateLimitException",
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
    "AVAILABLE_COMPONENTS",
    "__version__"
]

# –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ —ç–∫—Å–ø–æ—Ä—Ç
if API_CLIENT_AVAILABLE:
    __all__.append("AvitoAPIClient")

if SELENIUM_CLIENT_AVAILABLE:
    __all__.append("AvitoSeleniumClient")

if WEBHOOK_HANDLER_AVAILABLE:
    __all__.append("AvitoWebhookHandler")


def get_avito_integration_info() -> Dict[str, Any]:
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ê–≤–∏—Ç–æ"""
    
    return {
        "version": __version__,
        "available_components": AVAILABLE_COMPONENTS,
        "supported_features": [
            "API –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ê–≤–∏—Ç–æ API",
            "Selenium –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–∞–∫ fallback",
            "–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–æ–≤",
            "–ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π",
            "Rate limiting –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"
        ]
    }